plugins {
    alias(libs.plugins.android.library)
    id 'maven-publish'
}

android {
    namespace 'com.lanji.mylibrary'
    compileSdk 35

    defaultConfig {
        minSdk 26

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}
dependencies {



    // 保留Glide供未来使用
    api 'com.github.bumptech.glide:glide:4.16.0'
    api 'com.appsflyer:af-android-sdk:6.16.2'

    // Firebase
    api platform('com.google.firebase:firebase-bom:31.5.0')
    api 'com.google.firebase:firebase-analytics'
    api 'com.google.firebase:firebase-messaging'

    api 'com.google.code.gson:gson:2.10'

    api 'com.auth0.android:auth0:3.7.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
publishing {
    publications {
        release(MavenPublication) {
            groupId = 'ljsd-group'
            artifactId = 'lanjinlibrary'
            version = '2.2.1'

//            afterEvaluate {
//                from components.release
//            }
        }
    }
}

//task generateEventConstants {
//    group = 'build'
//    description = 'Generates EventConstants.java from event.json'
//
//    doLast {
//        // 从 app 模块读取 event.json
//        def appModule = project(':app')
//        def sourceDir = file("${appModule.projectDir}/src/main/assets")
//        def eventJsonFile = new File(sourceDir, "event.json")
//
//        if (!eventJsonFile.exists()) {
//            println "event.json not found in ${sourceDir}"
//            return
//        }
//
//        def packageName = appModule.android.namespace ?: appModule.android.defaultConfig.applicationId
//        def packagePath = packageName.replace('.', '/')
//        def outputDir = file("${appModule.projectDir}/src/main/java/${packagePath}")
//        def outputFile = new File(outputDir, "EventConstants.java")
//
//        // 检查文件是否已存在
//        if (outputFile.exists()) {
//            println "EventConstants.java already exists at ${outputFile}, skipping generation"
//            return
//        }
//
//        def jsonContent = eventJsonFile.text
//        def events = new groovy.json.JsonSlurper().parseText(jsonContent)
//
//        def javaCode = new StringBuilder()
//        javaCode.append("package ${packageName};\n\n")
//        javaCode.append("/**\n")
//        javaCode.append(" * Event constants class that contains all event names from event.json\n")
//        javaCode.append(" * This file is auto-generated. Do not modify manually.\n")
//        javaCode.append(" */\n")
//        javaCode.append("public class EventConstants {\n")
//
//        events.each { event ->
//            def eventName = event.eventName
//            def constantName = eventName.toUpperCase().replaceAll("[^A-Z0-9]", "_")
//
//            javaCode.append("\n    /**\n")
//            javaCode.append("     * ${eventName} event name\n")
//            javaCode.append("     */\n")
//            javaCode.append("    public static final String ${constantName} = \"${eventName}\";\n")
//        }
//
//        javaCode.append("}\n")
//
//        outputFile.parentFile.mkdirs()
//        outputFile.text = javaCode.toString()
//        println "Generated EventConstants.java at ${outputFile}"
//    }
//}
//tasks.whenTaskAdded { task ->
//    if (task.name == 'preBuild') {
//        task.dependsOn generateEventConstants
//    }
//}
//
//// Also run during configuration
//afterEvaluate {
//    tasks.named('preBuild').configure {
//        dependsOn generateEventConstants
//    }
//}